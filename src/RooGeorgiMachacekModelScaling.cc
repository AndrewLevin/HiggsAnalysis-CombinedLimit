/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "HiggsAnalysis/CombinedLimit/interface/RooGeorgiMachacekModelScaling.h" 

#include <math.h> 
#include "TMath.h" 
#include "RooFormulaVar.h"
#include "RooRealVar.h"
#include "RooFit.h"

#include "TFile.h"

ClassImpUnique(RooGeorgiMachacekModelScaling,MAGICWORDOFSOMESORT) 

RooGeorgiMachacekModelScaling::RooGeorgiMachacekModelScaling()
{
}

RooGeorgiMachacekModelScaling::RooGeorgiMachacekModelScaling(const char *name, 
					     const char *title,
					     RooAbsReal& _param) :
   RooAbsReal(name,title),
   param("param","param",this,_param)
{ 
} 


RooGeorgiMachacekModelScaling::
RooGeorgiMachacekModelScaling(const RooGeorgiMachacekModelScaling& other, 
		      const char* name) :  
  RooAbsReal(other,name),
  param("param",this,other.param)
{ 
} 


RooGeorgiMachacekModelScaling::~RooGeorgiMachacekModelScaling() {
  
}

Double_t RooGeorgiMachacekModelScaling::evaluate() const 
{ 

  double v(param);

  //return v*v*v*v/0.5/0.5/0.5/0.5;

  return v*v*v*v/0.5/0.5/0.5/0.5;

}

